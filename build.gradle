import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'xyz.hlafaille'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    // implementation 'org.springframework.session:spring-session-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.69'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

/**
 * Basic task to call the 'build' script in package.json. We use powershell & bash here to give us a proper shell
 * environment.
 */
tasks.register('npmBuild', Exec) {
    group 'npm'
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        commandLine 'powershell', 'npm run build'
    } else if (Os.isFamily(Os.FAMILY_UNIX)) {
        commandLine 'bash', '-c', 'npm run build'
    }
}
compileJava.dependsOn npmBuild

/**
 * Copies files from .generatedResources into src/main/resources/static
 */
tasks.register('generatedResourcesCopy', Copy) {
        group 'npm'
        from '.generatedResources/bundle.js'
        into 'src/main/resources/static'
        from '.generatedResources/style.css'
        into 'src/main/resources/static'
}
processResources.dependsOn generatedResourcesCopy
