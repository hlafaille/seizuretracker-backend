import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'xyz.hlafaille'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    // implementation 'org.springframework.session:spring-session-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.69'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

///////
/**
 * Tailwind Compilation
 */
processResources {
    exclude '**/*/*.css'
    exclude '**/*/*.js'
}

tasks.register('compileTailwind', Exec) {
    workingDir projectDir

    // Define the directory you want to list files from
    File dir = new File(workingDir.toString() + '/src/main/css') // Change to your directory

    // establish our command
    List<String> command = new ArrayList<>()
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        command.add(workingDir.toString() + "/node_modules/.bin/tailwindcss.cmd")
    } else {
        command.add(workingDir.toString() + "/node_modules/.bin/tailwindcss")
    }

    command.add('-i')
    command.add("src/main/css/style.css")
    command.add('-o')
    command.add('build/resources/main/static/style.css')
    println("Running tailwindcli: " + command.toString())
    commandLine command
}

/**
 * JavaScript Bundling
 */

tasks.register('bundleJavaScript', Exec) {
    workingDir projectDir

    // Define the directory you want to list files from
    File dir = new File(workingDir.toString() + '/src/main/js') // Change to your directory

    // establish our command
    List<String> command = new ArrayList<>()
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        command.add(workingDir.toString() + "/node_modules/.bin/esbuild.cmd")
    } else {
        command.add(workingDir.toString() + "/node_modules/.bin/esbuild")
    }

    command.add("src/main/js/app.js")
    command.add("--bundle")
    command.add("--format=iife")
    command.add("--platform=browser")
    command.add("--global-name=SeizureTracker")
    command.add("--tree-shaking=false")
    command.add("--outfile=build/resources/main/static/bundle.js")
    println("Running esbuild: " + command.toString())
    commandLine command
}

// Make the Java build task depend on the Tailwind compile task
processResources.dependsOn compileTailwind
processResources.dependsOn bundleJavaScript